---

- name: Add proxy to /etc/environment
  become: true
  blockinfile:
    path: /etc/environment
    block: |
      http_proxy="http://wwwproxy.unimelb.edu.au:8000"
      https_proxy="http://wwwproxy.unimelb.edu.au:8000"
      ftp_proxy="http://wwwproxy.unimelb.edu.au:8000"
      no_proxy=localhost,127.0.0.1,127.0.1.1,ubuntu,ccc_1.novalocal,ccc_1


- name: apt-get update
  become: true
  apt:
    force_apt_get: yes
    update_cache: yes

# 1.1.2 install the common apt packages
- name: install the packages using apt modules
  become: true
  apt:
    state: latest
    update_cache: yes
    name: ['python3-pip', 'git', 'vim', 'nginx']


# 1.2 directory related
# 1.2.1 mkdir the directory
- name: mkdir the mount point
  become: true
  file:
    path: /data
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0755


# 1.2.2 mount the volume on the directory
# 1.2.3 mkdir the workspace
- name: mkdir the /data/workspace
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0777
  with_items:
    - /data/workspace
    - /data/log
    - /data/log/node


## 1.3 git
- name: checkout from github
  command: git clone https://github.com/Neetordy/Cluster_and_Cloud_Computing.git
  args:
    chdir: /data/workspace
    creates: /data/workspace/Cluster_and_Cloud_Computing

- name: install webserver package
  become: true
  command: pip3 install {{item}}
  with_items:
    - couchdb
    - flask
    - uwsgi
    - virtualenv


## 2 specific: crawler-streamer
### 2.1 install the node.js related packages
### 2.2 install the node.js
#  - name: install the node.js related packasged
#    become: true
#    apt: name={{item}} state=latest update_cache=yes
#    with_items:
#      - npm
#  - name: install the pm2
#    become: true
#    command: npm install pm2 -g
#
#   - name: install the node.js
#     ignore_errors: True
#     shell: |
#       cd /data/workspace
#       wget https://nodejs.org/dist/v8.11.1/node-v8.11.1-linux-x64.tar.xz
#       mkdir node
#       tar xvf node-v*.tar.?z --strip-components=1 -C ./node
#       cd /data/workspace
#       sudo rm -rf node-v*
#       mkdir node/etc
#       echo 'prefix=/usr/local' > /data/workspace/node/etc/npmrc
#       sudo  mv node /opt/
#       sudo chown -R root: /opt/node
#       sudo ln -s /opt/node/bin/node /usr/local/bin/node
#       sudo ln -s /opt/node/bin/npm /usr/local/bin/npm